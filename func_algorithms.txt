lineSegmentIntersection
	line with two points:(f, g), (h, j)
	slope -> (j-g)/(h-f)
	when x = 0, y(or c) is (g - slope * f)
	so,
	line with equation: y = ((j-g)/(h-f))x + (g-((j-g)/(h-f))*f)


	line1: y1 = zx + c1
	line2: y2 = wx + c2

	if (z-w==0) no intersection

	xi = (c2 - c1)/(z - w)
	yi = z(xi) + c1

	Intersection point is at (xi, yi)

	(ex) 
	line1 with two points:(1,3),(5,11)
	line1 with equation: y = ((11-3)/(5-1))x + (3-((11-4)/(5-1))*1)
			       = (8/4)x + (3-(8/4)*1)
			       = 2x + 1

	p1: y = 2x + 1
	p2: y = 4x - 2

	2-4!=0 -> there is an intersection point
 	     
	xi = (-2 - 1)/(2 - 4)
	   = 3/2
	yi = 2(3/2) + 1
	   = 4
		
	Intersection point is at  (3/2, 4)
	(end ex)

closestPairOfPoints
	point1: (f, g)
	point2: (h, j)

	distance between two 2d points
		= √((h – f)^2 + (j – g)^2)
	(ex)

	point1: (2,7)
	point2: (6,10)
	distance = √((6 – 2)^2 + (10 – 7)^2)
		 = √(16 + 9)
		 = 5
	(end ex)

convexHull
	for this function, we're using stack list
	first, get the bottom most and left most point and sort points by angle with respect to the bottom most and left most point
	add the bottom most and left most point to the stack list
	go through the sorted points with for loop
	for i in sorted list
	
		if the point is counter clockwise respect to the top of the stack list, then add the point to stack list then move on to the next point in the sorted list
		
		if the point is clockwise respect to the top of the stack list, then pop a point from the stack list. 
		keep popping form the stack list until the new point is clockwise respect to the top of the stack list. 
		add the point to the stack list, then move on to the next point.
	
	




Largest empty circle (in convex hull enclosing no point)
	get rid of points from the point used in convex hull first
	
	point1: (f, g)
	radius: r
	point2: (h, j)

	circle size = Pi * r^2
	
	to see if point2 is in the circle, get the distance between the two points. If distance is longer than r, then point2 is not in the circle. if the distance is shorter than r, then point2 is in the circle.
	distance between two 2d points
		= √((h – f)^2 + (j – g)^2)

	if r < √((h – f)^2 + (j – g)^2)
		point is not in the circle

	(ex) 
	point1: (0,4)
	radius: 6
	point2: (4,4)

	circle size = 36Pi
	
	distance = √((4 – 0)^2 + (4 – 4)^2)
		 = √(16 + 0)
		 = 4
	
	radius(6) is bigger than distance, so the point2 is in the circle.
	(end ex)



