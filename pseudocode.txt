

Point Class 
	init(list)
		list (point 1, point 2, point 3,,,,,,)

Line Segment Class
	init(Point, Point)
		Head point (Point class)
		End point (Point class)
	
Circle Class
	init(Point, radius)
		center point (Point class)
		Radius (int)
	
space Class 
	init(name, dimention)
		name of the space (str)
		dimension of the space (int)
		list_of_points (list<Point>)
		list of lines (list<Line>)
		list of circles (list<Circle>)
	
		add_point function() 
			create a new point class with user input, and add the point to list_of_points
			
		add_line function()
			create a new line class with user input, and add the point to list_of_lines
			
		add_circle function()
			create a new circle class with user input, and add the point to list_of_cicles
			
		display_all_entities function()
			for(i in list_of_points) 
				print(point i at ------\n)
				
			for(i in list_of_lines) 
				print(line i at ------\n)
				
			for(i in list_of_cicles) 
				print(circle i at ------\n)
			
Main()
	##variables ##
		list for spaces (name space_list ?) 
		current space
		
	call load_data function()
	
	while ( true )
		Ask user if they want to use already created plane or create new plane
		If (use already created plane)
			S for ( i in space_list) 
				print(space_list[i] \n) 
			let user select a space 
			set the space as current_space
		Else
			Let user create new space 
			create new space class 
			set the new space as current_space
		
		
		while (true) 
			ask user
			(
				1. Create point
				2. Create line
				3. Create circle
				4. Line segment intersection
				5. Closest pair of points
				6. Convex hull
				7. Largest empty circle
				8. Display all entities 
				9. save the change
				10. (possibly) Change working plane
				11. exit
			)

			If (1)
				call add_point function()
			If(2)
				call add_line function()
			If(3)
				call add_radius function()
			If(4)
				call Line_Segment_Intersection function()
			If(5)
				call Closest_Pair_of_Points function()
			If(6)
				call Convex_Hull function()
			If(7)
				Largest_empty_circle function()
			If(8)
				call display_all_entities function()
			If(9)
				update the json file 			
			If(10)
				break the while loop
			If(11)
				Exit the program

load_data function()
	load a jason file for spaces, create space, add them to the space_list

Line_Segment_Intersection function()
	

Closest_Pair_of_Points function()


Convex_Hull function()


Largest_empty_circle function()




